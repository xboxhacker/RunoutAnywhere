# --- WiFi Filament Runout (ESP8266) Macros for Klipper ---
# Include this file in your main printer.cfg with:
# ~~~>>>> [include filament_runout_wifi.cfg] <<<<<~~~~~
# Remove [pause_resume] from your printer.cfg

[pause_resume]

# --- Timer length in seconds (10 minutes by default) ---
[gcode_macro SET_FILAMENT_TIMEOUT]
variable_filament_timeout: 600
gcode:
    {% set seconds = params.TIMEOUT|default(600)|int %}
    SET_GCODE_VARIABLE MACRO=FILAMENT_TIMEOUT_TIMER VARIABLE=timeout VALUE={seconds}
    RESPOND TYPE=info MSG="Filament timeout set to {{ seconds }}s"

[gcode_macro FILAMENT_TIMEOUT_TIMER]
variable_timeout: 600
variable_timer_active: False
variable_last_target_temp: 0
gcode: ""

# --- PAUSE Macro: save position, park, start timer, save hotend temp ---
[gcode_macro PAUSE]
description: Pause the printer, save location, park, start timer, save hotend temp
gcode:
    {% set ex = printer.extruder %}
    {% set toolhead = printer.toolhead %}
    # Save positions and movement mode
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_x VALUE={toolhead.position.x}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_y VALUE={toolhead.position.y}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_z VALUE={toolhead.position.z}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_e VALUE={ex.position}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=was_relative VALUE={toolhead.is_relative}
    # Save current hotend temp target
    SET_GCODE_VARIABLE MACRO=FILAMENT_TIMEOUT_TIMER VARIABLE=last_target_temp VALUE={ex.target}
    M83                  ; relative extrusion
    G91                  ; relative positioning
    G1 Z10 F900          ; lift nozzle
    G90                  ; absolute positioning
    G1 X10 Y10 F6000       ; park nozzle (change as needed)
    RESPOND TYPE=info MSG="Print paused. Filament runout detected."
    # Start heater-shutdown timer
    SET_GCODE_VARIABLE MACRO=FILAMENT_TIMEOUT_TIMER VARIABLE=timer_active VALUE=True
    {% if printer['gcode_macro FILAMENT_TIMEOUT_TIMER'].timeout > 0 %}
      TIMER_START ID=filament_timeout_timer TIME={printer['gcode_macro FILAMENT_TIMEOUT_TIMER'].timeout}
    {% endif %}

# --- RESUME Macro: restore temp, wait, restore position, cancel timer ---
[gcode_macro RESUME]
variable_last_x: 0
variable_last_y: 0
variable_last_z: 0
variable_last_e: 0
variable_was_relative: False
gcode:
    # Cancel heater-shutdown timer if running
    SET_GCODE_VARIABLE MACRO=FILAMENT_TIMEOUT_TIMER VARIABLE=timer_active VALUE=False
    TIMER_CANCEL ID=filament_timeout_timer
    # Restore hotend temp if it was turned off
    {% set target_temp = printer['gcode_macro FILAMENT_TIMEOUT_TIMER'].last_target_temp|float %}
    {% if target_temp > 0 and printer.extruder.target < target_temp - 2 %}
      M104 S{target_temp}
      RESPOND TYPE=info MSG="Restoring hotend temp to {target_temp}Â°C"
      M109 S{target_temp}
    {% endif %}
    RESPOND TYPE=info MSG="Print resumed. Returning to print position."
    # Restore position and movement mode
    {% if was_relative %}
      G91
    {% else %}
      G90
    {% endif %}
    G1 X{last_x} Y{last_y} Z{last_z} F6000
    G92 E{last_e}
    {% if was_relative %}
      G91
    {% else %}
      G90
    {% endif %}

# --- TIMER handler: turn off hotend if timer expires ---
[gcode_macro FILAMENT_TIMEOUT_TIMER_EXPIRED]
gcode:
    {% if printer['gcode_macro FILAMENT_TIMEOUT_TIMER'].timer_active %}
      RESPOND TYPE=info MSG="Filament not resumed in time, turning off hotend."
      M104 S0     ; turn off hotend
      # M140 S0   ; (optional) turn off bed
      SET_GCODE_VARIABLE MACRO=FILAMENT_TIMEOUT_TIMER VARIABLE=timer_active VALUE=False
    {% endif %}

# --- Klipper timer event handler ---
[event_handler filament_timeout_timer]
respond: none
gcode:
    FILAMENT_TIMEOUT_TIMER_EXPIRED

# --- Helper: Set the timeout (seconds) from console/gcode ---
# Usage: SET_FILAMENT_TIMEOUT TIMEOUT=900 (15min)
# SET_FILAMENT_TIMEOUT TIMEOUT=0 disables auto-shutdown

# --- End of WiFi filament runout include ---
